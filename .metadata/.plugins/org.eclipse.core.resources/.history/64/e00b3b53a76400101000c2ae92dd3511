package com.aurionpro.GuitarApp.Test;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.GuitarApp.model.Builder;
import com.aurionpro.GuitarApp.model.Guitar;
import com.aurionpro.GuitarApp.model.GuitarList;
import com.aurionpro.GuitarApp.model.GuitarSpec;
import com.aurionpro.GuitarApp.model.Type;
import com.aurionpro.GuitarApp.model.Wood;

public class GuitarTest {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		GuitarList list = new GuitarList();
		while (true) {
			try {
				System.out.println("Choice one Operation:");
				System.out.println("1.AddGuitar");
				int userInput = scanner.nextInt();
				switch (userInput) {
				case 1:
					boolean isTrue = false;
					while (!isTrue) {
						System.out.println("Enter the Guiter SerialNumber:");
						String serialNumber = scanner.nextLine();

						for (Guitar guitar : list.getGuitarData()) {
							if (guitar.getSerialNumber().equals(serialNumber)) {
								continue;
							}
						}

						scanner.nextLine();
						System.out.println("Enter the Guiter Price:");
						double price = scanner.nextDouble();
						if (price <= 0) {
							System.out.println("Please Enter price greater then 0!");
						}

						// BulderType

						Builder builderType;
						int builderOption;

						while (true) {
							System.out.println("Enter the Guitar Builder Type:");
							int i = 0;
							for (Builder type : Builder.values()) {
								System.out.println((i + 1) + "." + type);
								i++;
							}

							builderOption = scanner.nextInt();

							switch (builderOption) {
							case 1:
								builderType = Builder.FENDER;
								break;
							case 2:
								builderType = Builder.GIBSON;
								break;
							case 3:
								builderType = Builder.MARTIN;
								break;
							case 4:
								builderType = Builder.TAYLOR;
								break;
							case 5:
								builderType = Builder.CUSTOM;
								break;
							default:
								System.out.println("Invalid option! Please select a proper option.");
								continue;
							}

							break;
						}

						// Use builderType here for the rest of your logic

					}

//					list.addGuitar(new Guitar("123", 200,
//							new GuitarSpec(Builder.FENDER, "no", Type.BASS, Wood.OAK, Wood.OAK)));
					break;
				case 2:
					List<Guitar> data = list.getGuitarData();
					for (Guitar result : data) {
						System.out.println(result);
					}
					break;
				case 3:
					return;
				case 4:
					break;
				case 5:
					break;
				}

			} catch (InputMismatchException e) {
				System.out.println("Please enter only valid integer :" + e);
				scanner.next();
			}

		}
	}
}
