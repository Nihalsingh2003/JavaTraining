package com.aurionpro.GuitarApp.Test;

import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.GuitarApp.model.Builder;
import com.aurionpro.GuitarApp.model.Guitar;
import com.aurionpro.GuitarApp.model.GuitarList;
import com.aurionpro.GuitarApp.model.GuitarSpec;
import com.aurionpro.GuitarApp.model.Type;
import com.aurionpro.GuitarApp.model.Wood;

public class GuitarTest {
	public static <E extends Enum<E>> E getEnum(Scanner scanner, String prompt, E[] enumValues) {
		E choice = null;
		int userChoice;
		while (true) {
			System.out.println(prompt);

			for (E type : enumValues) {
				System.out.println(type.ordinal() + "." + type);

			}
			try {
				userChoice = scanner.nextInt();

				if (userChoice >= 1 && userChoice <= enumValues.length) {
					choice = enumValues[userChoice - 1];
					break;
				} else {
					System.out.println("Invalid option! Please select a valid option.");
					continue;
				}
			} catch (InputMismatchException e) {

				System.out.println("Invalid input! Please enter a valid integer.");
				scanner.nextLine();
			}
		}
		return choice;
	}

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		GuitarList list = new GuitarList();
		while (true) {
			try {
				System.out.println("Choice one Operation:");
				System.out.println("1.AddGuitar");
				System.out.println("2.ShowAllGuitar");
				int userInput = scanner.nextInt();
				switch (userInput) {
				case 1:

					System.out.println("Enter the Guiter SerialNumber:");
					String serialNumber = scanner.nextLine();

//					for (Guitar guitar : list.getGuitarData()) {
//						if (guitar.getSerialNumber().equals(serialNumber)) {
//							continue;
//						}
//					}
					// price
					scanner.nextLine();
					double price = 0;
					while (true) {
						try {
							System.out.println("Enter the Guitar Price:");
							price = scanner.nextDouble();
							if (price <= 0) {
								System.out.println("Please Enter price greater than 0!");
								continue;
							}
							break;
						} catch (InputMismatchException e) {
							System.out.println("Invalid price input! Please enter a valid number.");
							scanner.nextLine();
						}
					}
					scanner.nextLine();
					// Model
					System.out.println("Enter the GuitarModel:");
					String guiterModel = scanner.nextLine();

					// BulderType

					Builder builderType = getEnum(scanner, "Enter the Guitar Builder Type:", Builder.values());

					Type guiterType = getEnum(scanner, "Enter the Guitar Type", Type.values());

					Wood topWood = getEnum(scanner, "Enter the Guitar TopWood Type", Wood.values());

					Wood backWood = getEnum(scanner, "Enter the Guitar BackWood Type", Wood.values());

					GuitarSpec guitarSpec = new GuitarSpec(builderType, guiterModel, guiterType, backWood, topWood);
					list.addGuitar(new Guitar(serialNumber, price, guitarSpec));

					break;
				case 2:
					List<Guitar> data = list.getGuitarData();
					for (Guitar result : data) {
						System.out.println(result);
					}
					break;
				case 3:
					return;
				case 4:
					break;
				case 5:
					break;
				}

			} catch (InputMismatchException e) {
				System.out.println("Please enter only valid integer :" + e);
				scanner.next();
			}

		}
	}

}